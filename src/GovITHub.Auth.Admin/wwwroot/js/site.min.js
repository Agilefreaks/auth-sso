(function () {
    'use strict';

    angular
      .module('authAdminPanel', ['ngAnimate', 'ngCookies', 'ngTouch', 'ngSanitize',
          'ngMessages', 'ngAria', 'ngResource', 'ui.router', 'ui.bootstrap', 'ui.tree']);

})();

(function () {
    'use strict';

    angular
      .module('authAdminPanel')
      .config(routerConfig);

    /** @ngInject */
    function routerConfig($stateProvider, $urlRouterProvider, $resourceProvider) {
        $resourceProvider.defaults.stripTrailingSlashes = false;

        $stateProvider
          .state('index', {
              abstract: true,
              url: "/index",
              templateUrl: "app/components/common/content.html"
          })
          .state('index.main', {
              url: "/main",
              templateUrl: "app/components/main/main.html",
              data: {
                  pageTitle: 'Dashboard'
              }
          })
            .state('index.samples', {
                url: "/samples",
                controller: "SamplesListController as vm",
                templateUrl: "app/components/samples/list.html",
                data: {
                    pageTitle: 'Samples'
                }
            })
            .state('index.samples_new', {
                url: "/samples/new",
                controller: "SamplesEditController as vm",
                templateUrl: "app/components/samples/edit.html",
                data: {
                    pageTitle: 'Samples'
                },
                resolve: {
                    status: [function () {
                        return { edit: false };
                    }],
                    id: [function () {
                        return null;
                    }]
                }
            })
            .state('index.samples_edit', {
                url: "/samples/:id",
                controller: "SamplesEditController as vm",
                templateUrl: "app/components/samples/edit.html",
                data: {
                    pageTitle: 'Samples'
                },
                resolve: {
                    status: [function () {
                        return { edit: true };
                    }],
                    id: ['$stateParams', function ($stateParams) {
                        return $stateParams.id;
                    }]
                }
            })
          // -->Articles: pages
          .state('index.articles', {
              url: "/articles",
              controller: "articlesListController as vm",
              templateUrl: "app/components/articles/list.html",
              data: {
                  pageTitle: 'articles'
              }
          })
          //.state('index.articles_new/:articleId', {
          //    url: "/articles_new/:articleId",
          //    controller: "articlesNewController as vm",
          //    templateUrl: "app/components/articles/new.html",
          //    data: {
          //        pageTitle: 'articles'
          //    },
          //    resolve: {
          //        articleId: ['$stateParams', function ($stateParams) {
          //            return $stateParams.articleId;
          //        }]
          //    }
          //})
          //.state('index.articles_dashboard/:articleId', {
          //    url: "/articles_dashboard/:articleId",
          //    controller: "articlesDashboardController as vm",
          //    templateUrl: "app/components/articles/dashboard.html",
          //    data: {
          //        pageTitle: 'Products'
          //    },
          //    resolve: {
          //        articleId: ['$stateParams', function ($stateParams) {
          //            return $stateParams.articleId;
          //        }]
          //    }
          //})
          // -->Voting station: pages
          .state('index.voting_stations', {
              url: "/voting_stations",
              controller: "votingStationsListController as vm",
              templateUrl: "app/components/voting_stations/list.html",
              data: {
                  pageTitle: 'Lista sectii de votare'
              }
          })
          .state('index.voting_station_new', {
              url: "/voting_station_new",
              controller: "votingStationsNewController as vm",
              templateUrl: "app/components/voting_stations/new.html",
              data: {
                  pageTitle: 'Adaugare sectie de votare'
              }
          })
          .state('index.voting_station_update/:stationId', {
              url: "/voting_station_update/:stationId",
              controller: "votingStationsUpdateController as vm",
              templateUrl: "app/components/voting_stations/update.html",
              data: {
                  pageTitle: 'Modificare sectie de votare'
              },
              resolve: {
                  articleId: ['$stateParams', function ($stateParams) {
                      return $stateParams.stationId;
                  }]
              }
          })
          .state('index.voting_station_dashboard/:stationId', {
              url: "/voting_station_dashboard/:stationId",
              controller: "votingStationsDashboardController as vm",
              templateUrl: "app/components/voting_stations/dashboard.html",
              data: {
                  pageTitle: 'Detalii despre sectia de votare'
              },
              resolve: {
                  articleId: ['$stateParams', function ($stateParams) {
                      return $stateParams.stationId;
                  }]
              }
          })
          // -->User: pages
          .state('index.users', {
              url: "/users",
              templateUrl: "app/components/users/list.html",
              controller: "usersListController as vm",
              data: {
                  pageTitle: 'Users'
              }
          })
          .state('index.users_new', {
              url: "/users_new",
              templateUrl: "app/components/users/new.html",
              controller: "usersNewController as vm",
              data: {
                  pageTitle: 'New User'
              }
          })
          .state('index.users_dashboard/:userId', {
              url: "/users_dashboard/:userId",
              templateUrl: "app/components/users/dashboard.html",
              controller: "usersDashboardController as vm",
              data: {
                  pageTitle: 'UserName'
              },
              resolve: {
                  userId: ['$stateParams', function ($stateParams) {
                      return $stateParams.userId;
                  }]
              }
          });

        $urlRouterProvider.otherwise('/index/main');
    }

})();

(function() {
  'use strict';

  angular
    .module('authAdminPanel')
    .run(function ($log, $rootScope, $state) {
          /** @ngInject */
          $rootScope.goto = function(route, opts) {
              $state.go(route,opts);
          }
          $log.debug('runBlock end');
      });
})();

/**
  A service for creating and managing $resource objects for the api 

Default options:
    { 
        'get':    {method:'GET'},
        'save':   {method:'POST'},
        'query':  {method:'GET', isArray:true},
        'remove': {method:'DELETE'},
        'delete': {method:'DELETE'} 
    }; 
 



 */
(function () {
    'use strict';

    //Directive used to set metisMenu and minimalize button
    /*eslint angular/di: [2,"array"]*/
    angular.module('authAdminPanel')
    .service('User', ['$q', function ($q) {
        this.data = {
            name: "Melissa",
            defaults: {
                currency: "GPB"
            },
            lang: "en"
        }
    }]);
    
})();


'use strict';

//Directive used to set metisMenu and minimalize button
angular.module('authAdminPanel')
    .directive('sideNavigation', function ($timeout) {
        return {
            restrict: 'A',
            link: function (scope, element) {
                // Call metsi to build when user signup
                scope.$watch('authentication.user', function() {
                    $timeout(function() {
                        element.metisMenu();
                    });
                });

            }
        };
    })
    .directive('minimalizaSidebar', function ($timeout) {
        return {
            restrict: 'A',
            template: '<a class="navbar-minimalize minimalize-styl-2 btn btn-primary " href="" ng-click="minimalize()"><i class="fa fa-bars"></i></a>',
            controller: function ($scope) {
                $scope.minimalize = function () {
                    angular.element('body').toggleClass('mini-navbar');
                    if (!angular.element('body').hasClass('mini-navbar') || angular.element('body').hasClass('body-small')) {
                        // Hide menu in order to smoothly turn on when maximize menu
                        angular.element('#side-menu').hide();
                        // For smoothly turn on menu
                        $timeout(function () {
                            angular.element('#side-menu').fadeIn(400);
                        }, 200);
                    } else {
                        // Remove all inline style from jquery fadeIn function to reset menu state
                        angular.element('#side-menu').removeAttr('style');
                    }
                };
            }
        };
    });



/**
 * INSPINIA - Responsive Admin Theme
 * 2.5
 *
 * Custom scripts
 */

angular.element(document).ready(function ($timeout) {


  // Full height of sidebar
  function fix_height() {
    var heightWithoutNavbar = angular.element("body > #wrapper").height() - 61;
    angular.element(".sidebard-panel").css("min-height", heightWithoutNavbar + "px");

    var navbarHeigh = angular.element('nav.navbar-default').height();
    var wrapperHeigh = angular.element('#page-wrapper').height();

    if(navbarHeigh > wrapperHeigh){
      angular.element('#page-wrapper').css("min-height", navbarHeigh + "px");
    }

    if(navbarHeigh < wrapperHeigh){
      angular.element('#page-wrapper').css("min-height", angular.element(window).height()  + "px");
    }

    if (angular.element('body').hasClass('fixed-nav')) {
      if (navbarHeigh > wrapperHeigh) {
        angular.element('#page-wrapper').css("min-height", navbarHeigh - 60 + "px");
      } else {
        angular.element('#page-wrapper').css("min-height", angular.element(window).height() - 60 + "px");
      }
    }

  }

  //angular.element(window).bind("load resize scroll", function() {
  //  if(!angular.element("body").hasClass('body-small')) {
  //    fix_height();
  //  }
  //});

  // Move right sidebar top after scroll
  //angular.element(window).scroll(function(){
  //  if (angular.element(window).scrollTop() > 0 && !angular.element('body').hasClass('fixed-nav') ) {
  //    angular.element('#right-sidebar').addClass('sidebar-top');
  //  } else {
  //    angular.element('#right-sidebar').removeClass('sidebar-top');
  //  }
  //});

  //$timeout(function(){
  //  fix_height();
  //});

  // Minimalize menu when screen is less than 768px
  //angular.element(window).bind("load resize", function() {
  //  if (angular.element(document).width() < 769) {
  //    angular.element('body').addClass('body-small')
  //  } else {
  //    angular.element('body').removeClass('body-small')
  //  }
  //})

});